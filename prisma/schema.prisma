// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id           String     @id
  habiticaKeys String     @default("")
  party        String     @default("")
  energy       Float      @default(0)
  equity       Float      @default(0)
  tasks        Task[]
  egos         Ego[]
  stats        Stat[]
  shortcuts    Shortcut[]
  skills       Skill[]
}

model Ego {
  id     String @id @default(cuid())
  title  String
  stats  Stat[]
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, title])
}

model Stat {
  id     String @id @default(cuid())
  title  String
  value  Float  @default(0)
  egos   Ego[]
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, title])
}

model Task {
  id     String  @id @default(cuid())
  title  String
  date   String?
  steps  Step[]
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Step {
  id       String        @id @default(cuid())
  title    String
  duration Int
  cost     String
  rewards  String
  history  StepHistory[]
  task     Task          @relation(fields: [taskId], references: [id])
  taskId   String
}

model StepHistory {
  id      String   @id @default(cuid())
  date    DateTime
  elapsed Float
  value   Float
  note    String
  step    Step     @relation(fields: [stepId], references: [id])
  stepId  String
}

// model TaskHistory {
//   id     String   @id @default(cuid())
//   date   DateTime
//   status String
//   taskId String
//   user   User     @relation(fields: [userId], references: [id])
//   userId String
// }

model Shortcut {
  id      String @id @default(cuid())
  title   String
  command Json
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model Skill {
  name        String
  description String
  allowed     Boolean
  target      String
  repeat      Int
  user        User    @relation(fields: [userId], references: [id])
  userId      String

  @@id([name, userId])
}
